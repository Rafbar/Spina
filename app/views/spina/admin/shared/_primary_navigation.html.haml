%nav#primary.transformed
  %ul
    = spina_nav_li (%w[pages images attachments navigations resources] + Spina::Plugin.all.map { |plugin| plugin.namespace if current_theme.plugins.include?(plugin.name) }).include?(controller_name) do
      = link_to spina.admin_pages_path do
        = icon_spina('home')

      %ul
        = spina_nav_li current_admin_path.start_with?('/pages', '/navigations') && @page&.resource.blank? do
          = link_to t('spina.website.pages'), spina.admin_pages_path

        = spina_nav_li current_admin_path.start_with?('/images', '/attachments') do
          = link_to t('spina.website.media_library'), spina.admin_images_path

        - Spina::Plugin.all.each do |plugin|
          - if current_theme.plugins.include? plugin.name
            - if lookup_context.exists? "spina/admin/hooks/#{ plugin.namespace }/_website_secondary_navigation"
              = render "spina/admin/hooks/#{ plugin.namespace }/website_secondary_navigation", plugin: plugin

        - Spina::Resource.order(:label).each do |resource|
          = spina_nav_li (@resource || @page&.resource) == resource do
            = link_to resource.label, spina.admin_resource_path(resource)

    - Spina::Plugin.all.each do |plugin|
      - if current_theme.plugins.include? plugin.name
        - if lookup_context.exists? "spina/admin/hooks/#{ plugin.namespace }/_primary_navigation"
          = render "spina/admin/hooks/#{ plugin.namespace }/primary_navigation", plugin: plugin

    - account_items = ''.html_safe

    - unless Spina.config.social_links.empty?
      - account_items << spina_nav_li(params[:action] == 'social') do
        = link_to t('spina.preferences.social_media'), spina.social_admin_account_path

    - Spina::Plugin.all.each do |plugin|
      - if current_theme.plugins.include? plugin.name
        - if lookup_context.exists? "spina/admin/hooks/#{ plugin.namespace }/_settings_secondary_navigation"
          - account_items << render("spina/admin/hooks/#{ plugin.namespace }/settings_secondary_navigation", plugin: plugin)
      - if plugin.settings.present?
        - account_items << spina_nav_li(controller_name == 'settings' && params[:plugin] == plugin.namespace) do
          = link_to t("spina.#{plugin.namespace}.title"), spina.admin_edit_settings_path(plugin.namespace)

    - if !Spina.config.disable_account_edit || account_items.present?
      = spina_nav_li  %w[accounts users tenants].include?(controller_name) do
        = link_to Spina.config.disable_account_edit ? '#' : spina.edit_admin_account_path do
          = icon_spina('cog')
          = t('spina.preferences.title')

        - unless account_items.empty?
          %ul= account_items

    %li.bottom
      = link_to Spina.config.main_admin_path, data: { turbolinks: false } do
        = icon_spina('caret-left')
